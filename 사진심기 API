
/**
 * Created by 521ab on 2017-04-30.
 */
import android.app.Application;
import android.content.ClipData;
import android.content.Intent;
import android.net.Uri;
import android.util.Log;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.ByteArrayOutputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.StringTokenizer;
public class ImageSeed extends Application{

    public static String strUrl = "http://10.80.163.99/honjar/member/join?";                               // 여기 바꿔야 돰

    private ArrayList<Uri> ImageUriList = new ArrayList<>();                                        // 이미지 Uri를 저장할 list
    private ArrayList<String> ImageList = new ArrayList<>();
    private byte[][] ImageByteArray = null;                                                           // DB로 전송할 이미지
    private Date SelectDate = null;
    private int ImageCount = 0;
    private JSONArray jsonArray = new JSONArray();
    
    public ImageSeed(){
        
    }
    
    public ArrayList<String> getImageList() {
        return ImageList;
    }
    
    public Date getSelectDate() {
        return SelectDate;
    }

    public void setSelectDate(Date selectDate) {
        SelectDate = selectDate;
    }

    public int getImageCount() {
        return ImageCount;
    }

    public void setImageCount(int imageCount) {
        ImageCount = imageCount;
    }

    private byte[] getByteArray (InputStream inputStream) throws IOException {
        ByteArrayOutputStream byteBuffer = new ByteArrayOutputStream();
        int bufferSize = 1024;
        byte[] buffer = new byte[bufferSize];
        int len = 0;
        while ((len = inputStream.read(buffer)) != -1) {
            byteBuffer.write(buffer,0,len);
        }
        return byteBuffer.toByteArray();
    }
    // 선택한 날짜가 과거가 아닌지 확인하는 함수
    public boolean compareDate(){
        long currentTime = System.currentTimeMillis();
        Date NowDate = null;
        int value = 0;
        SimpleDateFormat dayTime = new SimpleDateFormat("yyyy-MM-dd");
        try {
            NowDate = dayTime.parse(dayTime.format(new Date(currentTime)));
        } catch (ParseException e) {
            e.printStackTrace();
        }
        if(SelectDate!=null)
            value = NowDate.compareTo(SelectDate);
        if(value > 0)
            return false;
        else if(value < 0)
            return true;
        else return false;
    }
    public void MultipleSelected(Intent data){
        ClipData clipData = data.getClipData();
        ArrayList<Uri> mArrayUri = new ArrayList<>();
        for (int i = 0;i < clipData.getItemCount(); i++) {
            ClipData.Item item = clipData.getItemAt(i);
            Uri uri = item.getUri();
            ImageUriList.add(uri);
            Log.v("LOG_TAG","MultipleData_Selected : " + uri);
        }
    }
    public void SingleSelected(Intent data){
        Uri uri = data.getData();
        ImageUriList.add(uri);
        Log.v("LOG_TAG","SingleData_Selected : " + uri);
    }
    public byte[][] getImageByteArray(){
        Iterator<Uri> iterator = ImageUriList.iterator();                                           // Uri 리스트 내부 값 가져올 때 사용할 iterator
        while (iterator.hasNext()) {
            Uri nextUri = iterator.next();
            Log.v("LOG_TAG",nextUri.toString());
            // DB로 전송할 이미지 Uri to byte[]
            try {
                InputStream inputStream = getContentResolver().openInputStream(nextUri);
                ImageByteArray[ImageCount++] = getByteArray(inputStream);
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            } catch (IOException e){
                e.printStackTrace();
            }
        }
        return ImageByteArray;
    }

    public void addImageList(byte[] byteArray){
        ImageList.add(byteArray.toString());
    }
    
    public void setJsonArray(byte[][] bytes){
        for(int i = 0;i<bytes.length;i++)
            jsonArray.put(bytes[i]);
    }

    public void sendData(String UserId, String TagId, String Name,Date ExpireDate, byte[][] ImageList, double Latitude, double Longitude) {

        try {
            for(int i=0;i<jsonArray.length();i++){
                JSONObject jsonObject = jsonArray.getJSONObject(i);
                strUrl += "userid=" + UserId + "&tagid=" + TagId + "&date=" + ExpireDate + "&name=" + Name +
                        "&image=" + jsonObject + "&latitude=" + Latitude + "&longitude=" + Longitude;
            }

        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
}
